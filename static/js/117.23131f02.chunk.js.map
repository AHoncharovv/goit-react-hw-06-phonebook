{"version":3,"file":"static/js/117.23131f02.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","Pages/Phonebook.js"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from \"react\";\nimport s from './ContactForm.module.css'\nimport PropTypes from 'prop-types';\n\nfunction ContactForm({ onSubmit }) {\n    const [ name, setName ] = useState('');\n    const [ number, setNumber ] = useState('');\n    \n    const handleInputChange = e => {\n        switch (e.currentTarget.name) {\n            case \"name\": return setName(e.currentTarget.value);\n            case \"number\": return setNumber(e.currentTarget.value);\n            default: return \"\";\n        }\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        onSubmit(name, number);\n        formReset();\n    }\n\n    const formReset = () => {\n        setName(\"\");\n        setNumber(\"\");\n        return\n    }\n    \n    return (\n        <form onSubmit={handleSubmit} className={s.form}>\n                    \n            <label className={s.label}>\n                Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={name}\n                    onChange={handleInputChange}\n                    className={s.input}\n                />\n            </label>\n\n            <label className={s.label}>\n                Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={number}\n                    onChange={handleInputChange}\n                    className={s.input}\n                />\n            </label>\n\n            <button className={s.btn}>Add contact</button>\n                    \n        </form>   \n    );   \n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"text\":\"ContactList_text__+NWAW\",\"btn\":\"ContactList_btn__6Piat\"};","import s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ContactList({ users, onClick }) {\n    return (\n        <ul className={s.list}>\n            {users.map((user) => (\n                <li key={user.id} className={s.item}>\n                    <span className={s.text}>{user.name} : {user.number}</span>\n                    <button type=\"button\" value={user.id} onClick={onClick} className={s.btn}>Delete</button>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n    users: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired\n    })),\n    onClick: PropTypes.func.isRequired\n}","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import s from \"./Filter.module.css\";\nimport PropTypes from 'prop-types';\n\nfunction Filter({ value, filterChange }) {\n    return (\n        <label className={s.label}>\n            Find contacts by name\n            <input value={value} onChange={filterChange} className={s.input}></input>\n        </label>\n    )\n}\n\nexport default Filter;\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    filterChange: PropTypes.func.isRequired,\n}\n","import { useState, useEffect } from \"react\";\nimport { nanoid } from 'nanoid';\nimport ContactForm from \"../components/ContactForm\";\nimport ContactList from \"../components/ContactList\";\nimport Filter from \"../components/Filter/Filter\";\n\nfunction Phonebook() {\n  const [contacts, setContacts] = useState(() => JSON.parse(window.localStorage.getItem('contacts')) ?? []);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts))\n  }, [contacts])\n\n  const handlerSubmitForm = (name, number) => {\n    const newUser = { id: nanoid(5), name, number };\n    const newUserNormalized = name.toLowerCase();\n    const matchedName = contacts.find(contact => contact.name.toLowerCase() === newUserNormalized);\n\n    matchedName\n      ? alert(`${name} is already in contacts.`)\n      : setContacts([...contacts, newUser]);\n  }\n\n  const handlerFilter = event => {\n    setFilter( event.currentTarget.value );\n  }\n\n  const handleDeleteUser = event => {\n    const deleteUserId = event.currentTarget.value;\n    setContacts(contacts.filter(contact => contact.id !== deleteUserId))\n  }\n  \n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n   \n  return ( \n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        color: '#010101'\n      }}\n    >\n\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handlerSubmitForm} />\n      <h2>Contacts</h2>\n      <Filter value={filter} filterChange={handlerFilter} />\n      <ContactList users={visibleContacts} onClick={handleDeleteUser} />\n\n    </div>\n  ); \n};\n\nexport default Phonebook;"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","onSubmit","useState","name","setName","number","setNumber","handleInputChange","e","currentTarget","value","formReset","event","preventDefault","className","s","type","pattern","title","required","onChange","users","onClick","map","user","filterChange","JSON","parse","window","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","contact","includes","style","display","flexDirection","alignItems","color","newUser","newUserNormalized","find","alert","deleteUserId"],"sourceRoot":""}